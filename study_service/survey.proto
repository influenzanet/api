syntax = "proto3";

package influenzanet.study_service;
option go_package = "github.com/influenzanet/study-service/pkg/api";

import "study_service/expression.proto";
import "study_service/survey-response.proto";

message SurveyContext {
  string mode = 1;
  repeated SurveyResponse previous_responses = 2;
  map<string, string> participant_flags = 3;
}

// expression that define how the survey context should be generated by the
// server
message SurveyContextDef {
  ExpressionArg mode = 3;
  repeated Expression previous_responses = 4;
}

message Survey {
  string id = 1;

  message Props {
    repeated LocalisedObject name = 1;
    repeated LocalisedObject description = 2;
    repeated LocalisedObject typical_duration = 3;
  }

  Props props = 2;
  int64 published = 3;
  int64 unpublished = 4;

  repeated Expression prefill_rules = 5;
  SurveyContextDef context_rules = 6;
  MaxItemsPerPage max_items_per_page = 7;
  string available_for = 8; // public, temporary_participants, active_participants
  bool require_login_before_submission = 9;


  SurveyItem survey_definition = 10;
  string version_id = 11;
  map<string, string> metadata = 12;
}

message MaxItemsPerPage {
  int32 large = 1;
  int32 small = 2;
}

message SpecialMode {
  bool active = 1;
  string mode = 2;
}

message SurveyItem {
  string id = 1;
  string key = 2;
  repeated string follows = 3;
  Expression condition = 4;
  float priority = 5;
  map<string, string> metadata = 6;

  // Question group attributes ->
  repeated SurveyItem items = 7;
  Expression selection_method = 8;
  // Question attributes ->
  string type = 9;              // item/question type
  ItemComponent components = 10; // is a group component
  repeated Validation validations = 11;
  string confidential_mode = 12; // "": not confidential, "add" / "replace"
  string map_to_key = 13;
}

message Validation {
  string key = 1;
  string type = 2; // hard or softvalidation
  Expression rule = 3;
}

message ItemComponent {
  string role = 1;
  string key = 2;
  repeated LocalisedObject content = 3;
  Expression display_condition = 4;
  Expression disabled = 5;

  // group component
  repeated ItemComponent items = 6;
  Expression order = 7;

  // response compontent
  string dtype = 8;

  message Style {
    string key = 1;
    string value = 2;
  }
  repeated Style style = 9;

  repeated LocalisedObject description = 10;

  message Properties {
    ExpressionArg min = 1;
    ExpressionArg max = 2;
    ExpressionArg stepSize = 3;
    ExpressionArg dateInputMode = 4;
  }
  Properties properties = 11;
}

message LocalisedObject {
  string code = 1; // locale code

  // for texts:
  repeated ExpressionArg parts = 2;
}